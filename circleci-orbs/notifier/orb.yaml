version: 2.1
description: "Tools for notifying external services about CI events"

executors:
  alpine-stable:
    docker:
    - image: alpine:3.10
    resource_class: small

jobs:
  datadog:
    description: |
      Creates a datadog event.
    executor: alpine-stable
    parameters:
      api_key:
        default: DATADOG_API_KEY
        description: |
          Name of the environment variable containing your Datadog API key.
        type: env_var_name
      tag:
        default: ""
        description: |
          Tag of event.
        type: string
      text:
        description: |
          Body text of the event.
        type: string
      title:
        description: |
          Title (eg. key) of the event.
        type: string
      dd_domain:
        default: "api.datadoghq.com"
        description: |
          Domain of datadog api. (It could be api.datadoghq.eu)
        type: string
    steps:
      - run: apk add --no-cache --no-progress curl
      - run: |
          curl -XPOST \
            -H "Content-Type: application/json" \
            -d '{"title": "'"<<parameters.title>>"'", "text": "'"<<parameters.text>>"'", "tags": ["'"<<parameters.tag>>"'"], "alert_type": "success"}' \
            "https://<<parameters.dd_domain>>/api/v1/events?api_key=${<<parameters.api_key>>}"

  sentry-deployment:
    description: |
      Creates a new release deployment in Sentry. Should be run after the release has been created.
    executor: alpine-stable
    parameters:
      environment:
        default: ${CIRCLE_TAG}
        description: |
          The environment for which the release applies.
        type: string
      organization:
        default: ${CIRCLE_PROJECT_USERNAME}
        description: |
          The name of the project's organization (on Sentry).
        type: string
      token:
        default: SENTRY_TOKEN
        description: |
          Name of the environment variable containing your Sentry API token.
        type: env_var_name
      version:
        default: ${CIRCLE_SHA1:0:10}
        description: |
          Newly-released version.
        type: string
    steps:
      - run: apk add --no-cache --no-progress curl
      - run: |
          curl -XPOST \
            -H "Authorization: Bearer ${<<parameters.token>>}" \
            -H "Content-Type: application/json" \
            -d '{"environment": "'"<<parameters.environment>>"'"}' \
            "https://sentry.io/api/0/organizations/<<parameters.organization>>/releases/<<parameters.version>>/deploys/"

  sentry-release:
    description: |
      Creates a new release in Sentry.
    executor: alpine-stable
    parameters:
      commit:
        default: ${CIRCLE_SHA1}
        description: |
          The git commit SHA for the new release.
        type: string
      prev_commit:
        default: ''
        description: |
          The git commit SHA for the previous release.
        type: string
      organization:
        default: ${CIRCLE_PROJECT_USERNAME}
        description: |
          The name of the project's organization (on Sentry).
        type: string
      project:
        default: ${CIRCLE_PROJECT_REPONAME}
        description: |
          The name of the project (on Sentry).
        type: string
      repository:
        default: ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
        description: |
          The repository containing the referenced commits.
        type: string
      token:
        default: SENTRY_TOKEN
        description: |
          Name of the environment variable containing your Sentry API token.
        type: env_var_name
      version:
        default: ${CIRCLE_SHA1:0:10}
        description: |
          Newly-released version.
        type: string
    steps:
      - run: apk add --no-cache --no-progress curl
      - run: |
          curl -XPOST \
            -H "Authorization: Bearer ${<<parameters.token>>}" \
            -H "Content-Type: application/json" \
            -d '{
                  "version": "'"<<parameters.version>>"'",
                  "ref": "'"<<parameters.commit>>"'",
                  "refs": [{
                    "repository": "'"<<parameters.repository>>"'",
                    "commit":"'"<<parameters.commit>>"'",
                    "previousCommit":"'"<<parameters.prev_commit>>"'"
                  }],
                  "projects": ["'"<<parameters.project>>"'"]
                }' \
            "https://sentry.io/api/0/organizations/<<parameters.organization>>/releases/"

  slack:
    description: |
      Uses thekevjames/slack-notifier to send a deployment notification to your workspace.
    executor: alpine-stable
    parameters:
      changes:
        default: ''
        description: |
          The (optional) changelog for this release.
        type: string
      diff_url:
        default: ${CIRCLE_COMPARE_URL}
        description: |
          A link to the changeset for this release.
        type: string
      environment:
        default: ${CIRCLE_TAG}
        description: |
          The environment being deployed.
        type: string
      prev_version:
        default: unknown
        description: |
          Previously-released version.
        type: string
      project:
        default: ${CIRCLE_PROJECT_REPONAME}
        description: |
          The name of the project.
        type: string
      user:
        default: ${CIRCLE_USERNAME}
        description: |
          User responsible for this release.
        type: string
      version:
        default: ${CIRCLE_SHA1:0:10}
        description: |
          Newly-released version.
        type: string
      webhook:
        default: ${SLACK_DEPLOYBOT_WEBHOOK}
        description: |
          Destination webhook URL.
        type: string
    steps:
      - run: apk add --no-cache --no-progress curl
      - run: curl https://raw.githubusercontent.com/TheKevJames/tools/master/slack-notifier/send-deploy-notif.sh > /send-deploy-notif.sh
      - run: |
          sh /send-deploy-notif.sh \
            -c "<<parameters.changes>>" \
            -d "<<parameters.diff_url>>" \
            -e "<<parameters.environment>>" \
            -n "<<parameters.project>>" \
            -p "<<parameters.prev_version>>" \
            -u "<<parameters.user>>" \
            -v "<<parameters.version>>" \
            -w "<<parameters.webhook>>"
