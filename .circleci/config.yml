version: 2.1

orbs:
  linter: talkiq/linter@4.0.0

executors:
  docker:
    docker:
      - image: docker:28.3.3
    resource_class: medium
  pandoc:
    docker:
      - image: pandoc/core:3.7.0
    resource_class: medium
  python:
    docker:
      - image: python:3.9.23
    resource_class: medium

commands:
  docker-get-custom-tag:
    parameters:
      ident:
        type: string
    steps:
      - when:
          condition:
            equal: ["atc1441-exporter", <<parameters.ident>>]
          steps:
            - run: |
                export ATC1441_VERSION=$(awk -F'= ' '/^version =/ {print substr($2, 2, length($2)-2)}'  docker-atc1441-exporter/pyproject.toml)
                echo "${ATC1441_VERSION}" >/tmp/custom-tag
      - when:
          condition:
            equal: ["caddy-security", <<parameters.ident>>]
          steps:
            - run: |
                export CADDY_VERSION=$(awk -F':|-' '/builder-alpine/ {print $2}' docker-caddy-security/Dockerfile)
                export SECURITY_VERSION=$(awk -F'=' '/ARG CADDYSECURITY_VERSION=/ {print substr($2, 2, length($2))}' docker-caddy-security/Dockerfile)
                echo "${CADDY_VERSION}-${SECURITY_VERSION}" >/tmp/custom-tag
      - when:
          condition:
            equal: ["fava", <<parameters.ident>>]
          steps:
            - run: |
                export FAVA_VERSION=$(awk -F'=' '/ARG FAVA_VERSION=/ {print $2}' docker-fava/Dockerfile)
                echo "${FAVA_VERSION}" >/tmp/custom-tag
      - when:
          condition:
            equal: ["gcloud-pubsub-emulator", <<parameters.ident>>]
          steps:
            - run: |
                export GCLOUD_VERSION=$(awk -F':|-' '/google-cloud-cli/ {print $4}' docker-gcloud-pubsub-emulator/Dockerfile)
                echo "${GCLOUD_VERSION}" >/tmp/custom-tag
      - when:
          condition:
            equal: ["mysqltuner", <<parameters.ident>>]
          steps:
            - run: |
                export MYSQLTUNER_VERSION=$(awk -F'=' '/VERSION=/ {print $2}' docker-mysqltuner/Makefile)
                echo "${MYSQLTUNER_VERSION}" >/tmp/custom-tag
      - when:
          condition:
            equal: ["nox", <<parameters.ident>>]
          steps:
            - run: |
                export NOX_VERSION=$(awk -F'=' '/nox/ {print $3}' docker-nox/requirements.txt)
                echo "${NOX_VERSION}" >/tmp/custom-tag
      - when:
          condition:
            equal: ["tuning-primer", <<parameters.ident>>]
          steps:
            - run: |
                export TUNINGPRIMER_VERSION=$(awk -F' ' '/Version:/ {print $3}' docker-tuning-primer/root/tuning-primer.sh)
                echo "${TUNINGPRIMER_VERSION}" >/tmp/custom-tag

  docker-buildx-and-push:
    parameters:
      builder:
        default: builder
        type: string
      ident:
        type: string
      platforms:
        type: string
      tag:
        type: string
    steps:
      - run: |
          docker buildx build \
            --builder "<<parameters.builder>>" \
            --progress plain \
            -f "docker-<<parameters.ident>>/Dockerfile" \
            -t "thekevjames/<<parameters.ident>>:<<parameters.tag>>" \
            -t "quay.io/thekevjames/<<parameters.ident>>:<<parameters.tag>>" \
            --platform "<<parameters.platforms>>" \
            --output type=image,push=true \
            docker-<<parameters.ident>>

  docker-publish-readme:
    parameters:
      ident:
        type: string
      version:
        # TODO: renovate
        default: v1.9.0
        type: string
    steps:
      - run: apk add --no-cache --no-progress curl
      - run: mkdir -p "${HOME}/.docker/cli-plugins"
      - run: curl -Lo "${HOME}/.docker/cli-plugins/docker-pushrm" "https://github.com/christian-korneck/docker-pushrm/releases/download/<<parameters.version>>/docker-pushrm_linux_amd64"
      - run: chmod +x "${HOME}/.docker/cli-plugins/docker-pushrm"
      - attach_workspace:
          at: /meta
      - run: docker pushrm "thekevjames/<<parameters.ident>>" --file=/meta/README.md
      - run: docker pushrm "quay.io/thekevjames/<<parameters.ident>>" --file=/meta/README.md

jobs:
  docker-workflow:
    executor: docker
    parameters:
      ident:
        type: string
      platforms:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          docker buildx create \
            --name builder \
            --driver docker-container \
            --bootstrap
      - run: echo "$DOCKER_PASS" | docker login docker.io --username "$DOCKER_USER" --password-stdin
      - run: echo "$QUAY_PASS" | docker login quay.io --username "$QUAY_USER" --password-stdin
      - docker-buildx-and-push:
          ident: <<parameters.ident>>
          platforms: <<parameters.platforms>>
          tag: ${CIRCLE_SHA1:0:10}
      - when:
          condition:
            equal: ["master", <<pipeline.git.branch>>]
          steps:
            - docker-get-custom-tag:
                ident: <<parameters.ident>>
            - docker-buildx-and-push:
                ident: <<parameters.ident>>
                platforms: <<parameters.platforms>>
                tag: $(cat /tmp/custom-tag)
            - docker-buildx-and-push:
                ident: <<parameters.ident>>
                platforms: <<parameters.platforms>>
                tag: latest
      - docker-publish-readme:
          ident: <<parameters.ident>>

  docker-build-readme:
    executor: pandoc
    parameters:
      ident:
        type: string
      prefix:
        default: "docker-"
        type: string
    steps:
      - run: apk add --no-cache --no-progress ca-certificates openssl
      - run: mkdir /meta
      - checkout
      - run: pandoc -o/meta/README.md <<parameters.prefix>><<parameters.ident>>/README.rst
      - persist_to_workspace:
          root: /meta
          paths:
            - README.md

workflows:
  # TODO: test workflow: cargo build cctui/etc

  run-jobs:
    jobs:
      - linter/pre-commit:
          executor: python
      - docker-build-readme:
          name: docker-build-readme-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - atc1441-exporter
                - caddy-security
                - fava
                - gcloud-pubsub-emulator
                - mysqltuner
                - nox
                - tuning-primer
          requires:
            - linter/pre-commit
      - docker-workflow:
          name: docker-workflow-<<matrix.ident>>
          platforms: "linux/amd64"
          matrix:
            parameters:
              ident:
                - atc1441-exporter
                - caddy-security
                - fava
                - mysqltuner
                - nox
                - tuning-primer
          requires:
            - docker-build-readme-<<matrix.ident>>
      - docker-workflow:
          name: docker-workflow-<<matrix.ident>>
          platforms: "linux/amd64,linux/arm64"
          matrix:
            parameters:
              ident:
                - gcloud-pubsub-emulator
          requires:
            - docker-build-readme-<<matrix.ident>>
