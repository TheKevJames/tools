version: 2.1

orbs:
  docker: talkiq/docker@3
  linter: talkiq/linter@4

executors:
  docker:
    docker:
      - image: docker:25.0.5-git
    resource_class: medium
  node:
    docker:
      - image: node:22.9.0-alpine
    resource_class: medium
  pandoc:
    docker:
      - image: pandoc/core:3.5.0
    resource_class: medium
  python:
    docker:
      - image: python:3.9.19
    resource_class: medium

commands:
  custom-tag:
    parameters:
      ident:
        type: string
      tag:
        default: /tmp/custom-tag
        type: string
    steps:
      - run: docker tag "thekevjames/<<parameters.ident>>:latest" "thekevjames/<<parameters.ident>>:$(cat <<parameters.tag>>)"
      - run: docker tag "quay.io/thekevjames/<<parameters.ident>>:latest" "quay.io/thekevjames/<<parameters.ident>>:$(cat <<parameters.tag>>)"
      - run: docker push "thekevjames/<<parameters.ident>>:$(cat <<parameters.tag>>)"
      - run: docker push "quay.io/thekevjames/<<parameters.ident>>:$(cat <<parameters.tag>>)"

  docker-build:
    parameters:
      ident:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - docker/build:
          local_image_name: "<<parameters.ident>>:${CIRCLE_SHA1:0:10}"
          path: "docker-<<parameters.ident>>"

  docker-publish:
    parameters:
      ident:
        type: string
      tag:
        type: string
    steps:
      - run: echo "$DOCKER_PASS" | docker login docker.io --username "$DOCKER_USER" --password-stdin
      - run: echo "$QUAY_PASS" | docker login quay.io --username "$QUAY_USER" --password-stdin
      - run: docker tag "<<parameters.ident>>:${CIRCLE_SHA1:0:10}" "thekevjames/<<parameters.ident>>:<<parameters.tag>>"
      - run: docker tag "<<parameters.ident>>:${CIRCLE_SHA1:0:10}" "thekevjames/<<parameters.ident>>:latest"
      - run: docker tag "<<parameters.ident>>:${CIRCLE_SHA1:0:10}" "quay.io/thekevjames/<<parameters.ident>>:<<parameters.tag>>"
      - run: docker tag "<<parameters.ident>>:${CIRCLE_SHA1:0:10}" "quay.io/thekevjames/<<parameters.ident>>:latest"
      - run: docker push "thekevjames/<<parameters.ident>>:<<parameters.tag>>"
      - run: docker push "thekevjames/<<parameters.ident>>:latest"
      - run: docker push "quay.io/thekevjames/<<parameters.ident>>:<<parameters.tag>>"
      - run: docker push "quay.io/thekevjames/<<parameters.ident>>:latest"

jobs:
  docker-build-and-publish:
    executor: docker
    parameters:
      ident:
        type: string
      tag:
        type: string
    steps:
      - docker-build:
          ident: <<parameters.ident>>
      - docker-publish:
          ident: <<parameters.ident>>
          tag: <<parameters.tag>>

  docker-build-readme:
    executor: pandoc
    parameters:
      ident:
        type: string
      prefix:
        default: 'docker-'
        type: string
    steps:
      - run: apk add --no-cache --no-progress ca-certificates openssl
      - run: mkdir /meta
      - checkout
      - run: pandoc -o/meta/README.md <<parameters.prefix>><<parameters.ident>>/README.rst
      - persist_to_workspace:
          root: /meta
          paths:
            - README.md

  # TODO: this should be doable with curl or python...
  # TODO: also support quay
  docker-readme-push:
    executor: node
    parameters:
      ident:
        type: string
    steps:
      - run: apk add --no-cache --no-progress ca-certificates openssl
      - checkout
      - run: npm install docker-hub-api
      - attach_workspace:
          at: /meta
      - run: node ./docker-update-readme.js thekevjames <<parameters.ident>> /meta/README.md

workflows:
  # TODO: test workflow: cargo build cctui/etc

  test:
    when:
      equal: [ kjames/build-on-branches, << pipeline.git.branch >> ]
    jobs:
      - linter/pre-commit:
          executor: python
      - docker-build-and-publish:
          name: docker-autopublish-caddy-security
          ident: caddy-security
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export CADDY_VERSION=$(awk -F':|-' '/builder-alpine/ {print $2}' docker-caddy-security/Dockerfile)
                export SECURITY_VERSION=$(awk -F'=' '/ARG CADDYSECURITY_VERSION=/ {print substr($2, 2, length($2))}' docker-caddy-security/Dockerfile)
                echo "${CADDY_VERSION}-${SECURITY_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: caddy-security
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-fava
          ident: fava
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export FAVA_VERSION=$(awk -F'=' '/ARG FAVA_VERSION=/ {print $2}' docker-fava/Dockerfile)
                echo "${FAVA_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: fava
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-gcloud-pubsub-emulator
          ident: gcloud-pubsub-emulator
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export GCLOUD_VERSION=$(awk -F':|-' '/cloud-sdk/ {print $3}' docker-gcloud-pubsub-emulator/Dockerfile)
                echo "${GCLOUD_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: gcloud-pubsub-emulator
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-mysqltuner
          ident: mysqltuner
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export MYSQLTUNER_VERSION=$(awk -F'=' '/VERSION=/ {print $2}' docker-mysqltuner/Makefile)
                echo "${MYSQLTUNER_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: mysqltuner
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-nox
          ident: nox
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export NOX_VERSION=$(awk -F'=' '/nox/ {print $3}' docker-nox/requirements.txt)
                echo "${NOX_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: nox
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-tuning-primer
          ident: tuning-primer
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export TUNINGPRIMER_VERSION=$(awk -F' ' '/Version:/ {print $3}' docker-tuning-primer/root/tuning-primer.sh)
                echo "${TUNINGPRIMER_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: tuning-primer
          requires:
            - linter/pre-commit

      - docker-build-readme:
          name: docker-build-readme-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - caddy-security
                - fava
                - gcloud-pubsub-emulator
                - mysqltuner
                - nox
                - tuning-primer
          requires:
            - docker-autopublish-<<matrix.ident>>
      - docker-readme-push:
          name: docker-readme-push-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - caddy-security
                - fava
                - gcloud-pubsub-emulator
                - mysqltuner
                - nox
                - tuning-primer
          requires:
            - docker-build-readme-<<matrix.ident>>

  manual-publish:
    jobs:
      - docker-build-and-publish:
          name: docker-build-and-publish-<<matrix.ident>>
          tag: "${CIRCLE_TAG/docker-<<matrix.ident>>-/}"
          matrix:
            parameters:
              ident:
                - caddy-security
                - fava
                - gcloud-pubsub-emulator
                - mysqltuner
                - nox
                - tuning-primer
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^docker-<<matrix.ident>>-.*/
      - docker-build-readme:
          name: docker-build-readme-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - caddy-security
                - fava
                - gcloud-pubsub-emulator
                - mysqltuner
                - nox
                - tuning-primer
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^docker-<<matrix.ident>>-.*/
      - docker-readme-push:
          name: docker-readme-push-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - caddy-security
                - fava
                - gcloud-pubsub-emulator
                - mysqltuner
                - nox
                - tuning-primer
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^docker-<<matrix.ident>>-.*/
          requires:
            - docker-build-readme-<<matrix.ident>>
            - docker-build-and-publish-<<matrix.ident>>

  run-jobs:
    jobs:
      - linter/pre-commit:
          executor: python
      - docker-build-and-publish:
          name: docker-autopublish-caddy-security
          ident: caddy-security
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export CADDY_VERSION=$(awk -F':|-' '/builder-alpine/ {print $2}' docker-caddy-security/Dockerfile)
                export SECURITY_VERSION=$(awk -F'=' '/ARG CADDYSECURITY_VERSION=/ {print substr($2, 2, length($2))}' docker-caddy-security/Dockerfile)
                echo "${CADDY_VERSION}-${SECURITY_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: caddy-security
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-fava
          ident: fava
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export FAVA_VERSION=$(awk -F'=' '/ARG FAVA_VERSION=/ {print $2}' docker-fava/Dockerfile)
                echo "${FAVA_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: fava
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-gcloud-pubsub-emulator
          ident: gcloud-pubsub-emulator
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export GCLOUD_VERSION=$(awk -F':|-' '/cloud-sdk/ {print $3}' docker-gcloud-pubsub-emulator/Dockerfile)
                echo "${GCLOUD_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: gcloud-pubsub-emulator
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-mysqltuner
          ident: mysqltuner
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export MYSQLTUNER_VERSION=$(awk -F'=' '/VERSION=/ {print $2}' docker-mysqltuner/Makefile)
                echo "${MYSQLTUNER_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: mysqltuner
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-nox
          ident: nox
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export NOX_VERSION=$(awk -F'=' '/nox/ {print $3}' docker-nox/requirements.txt)
                echo "${NOX_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: nox
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - linter/pre-commit
      - docker-build-and-publish:
          name: docker-autopublish-tuning-primer
          ident: tuning-primer
          tag: "${CIRCLE_SHA1:0:10}"
          post-steps:
            - run: |
                export TUNINGPRIMER_VERSION=$(awk -F' ' '/Version:/ {print $3}' docker-tuning-primer/root/tuning-primer.sh)
                echo "${TUNINGPRIMER_VERSION}" >/tmp/custom-tag
            - custom-tag:
                ident: tuning-primer
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - linter/pre-commit

      - docker-build-readme:
          name: docker-build-readme-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - caddy-security
                - fava
                - gcloud-pubsub-emulator
                - mysqltuner
                - nox
                - tuning-primer
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - docker-autopublish-<<matrix.ident>>
      - docker-readme-push:
          name: docker-readme-push-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - caddy-security
                - fava
                - gcloud-pubsub-emulator
                - mysqltuner
                - nox
                - tuning-primer
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - docker-build-readme-<<matrix.ident>>
