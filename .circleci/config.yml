version: 2.1

orbs:
  docker: talkiq/docker@2
  gcloud: talkiq/gcloud@7

jobs:
  docker-publish:
    docker:
      - image: docker:20.10.17-git
    parameters:
      ident:
        type: string
      tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run: echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin
      - docker/build:
          local_image_name: "<<parameters.ident>>:${CIRCLE_SHA1:0:10}"
          path: "docker-<<parameters.ident>>"
      - run: docker tag "<<parameters.ident>>:${CIRCLE_SHA1:0:10}" "thekevjames/<<parameters.ident>>:<<parameters.tag>>"
      - run: docker tag "<<parameters.ident>>:${CIRCLE_SHA1:0:10}" "thekevjames/<<parameters.ident>>:latest"
      - run: docker push "thekevjames/<<parameters.ident>>:<<parameters.tag>>"
      - run: docker push "thekevjames/<<parameters.ident>>:latest"

  docker-readme-build:
    docker:
      - image: pandoc/core:2.18.0
    parameters:
      ident:
        type: string
      prefix:
        default: 'docker-'
        type: string
    steps:
      - run: apk add --no-cache --no-progress ca-certificates openssl
      - run: mkdir /meta
      - checkout
      - run: pandoc -o/meta/README.md <<parameters.prefix>><<parameters.ident>>/README.rst
      - persist_to_workspace:
          root: /meta
          paths:
            - README.md

  # TODO: this should be doable with curl or python...
  docker-readme-push:
    docker:
      - image: node:18.2.0-alpine
    parameters:
      ident:
        type: string
    steps:
      - run: apk add --no-cache --no-progress ca-certificates openssl
      - checkout
      - run: npm install docker-hub-api
      - attach_workspace:
          at: /meta
      - run: node ./docker-update-readme.js thekevjames <<parameters.ident>> /meta/README.md

  update-poe-container:
    docker:
      - image: google/cloud-sdk:alpine
    resource_class: small
    steps:
      - gcloud/auth:
          project: thekevjames-175823
      - run: |
          gcloud compute instances update-container poe \
            --zone=us-west1-a \
            --container-image=thekevjames/poe:${CIRCLE_SHA1:0:10}

workflows:
  run-jobs:
    jobs:
      - docker-readme-build:
          name: docker-readme-build-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - gcloud-pubsub-emulator
                - minify
                - mysqltuner
                - nox
                - tuning-primer
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
      - docker-readme-build:
          name: docker-readme-build-poe
          ident: poe
          prefix: ''  # TODO: sigh, fixme
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
      - docker-readme-push:
          name: docker-readme-push-<<matrix.ident>>
          matrix:
            parameters:
              ident:
                - gcloud-pubsub-emulator
                - minify
                - mysqltuner
                - nox
                - poe
                - tuning-primer
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - docker-readme-build-<<matrix.ident>>

      # DOCKER: gcloud-pubsub-emulator
      - docker-publish:
          name: docker-publish-gcloud-pubsub-emulator
          ident: gcloud-pubsub-emulator
          # TODO: build tag automagically from ident, then use a matrix?
          tag: "${CIRCLE_TAG:30}"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^docker-gcloud-pubsub-emulator-.*/
      # TODO: nuke once we can trigger tags from gcloud version bumps
      - docker-publish:
          name: docker-publish-gcloud-pubsub-emulator-master
          ident: gcloud-pubsub-emulator
          tag: "${CIRCLE_SHA1:0:10}"
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/

      # DOCKER: minify
      - docker-publish:
          name: docker-publish-minify
          ident: minify
          tag: "${CIRCLE_TAG:14}"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^docker-minify-.*/

      # DOCKER: mysqltuner
      - docker-publish:
          name: docker-publish-mysqltuner
          ident: mysqltuner
          tag: "${CIRCLE_TAG:18}"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^docker-mysqltuner-.*/

      # DOCKER: nox
      - docker-publish:
          name: docker-publish-nox
          ident: nox
          tag: "${CIRCLE_TAG:11}"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^docker-nox-.*/

      # DOCKER: poe
      - docker/publish:
          name: build-docker-poe
          image: thekevjames/poe
          path: poe
          pre-steps:
            - setup_remote_docker:
                version: 19.03.12
            - run: echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
      - update-poe-container:
          name: deploy-poe
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - build-docker-poe

      # DOCKER: tuning-primer
      - docker-publish:
          name: docker-publish-tuning-primer
          ident: tuning-primer
          tag: "${CIRCLE_TAG:21}"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^docker-tuning-primer-.*/
