{
    "packageRules": [
        {
            "groupName": "com.google.auto.value",
            "matchManagers": ["gradle", "maven"],
            "matchDepPatterns": [
                "^com.google.auto.value.*$",
            ],
        },
        {
            "groupName": "org.apache.beam",
            "matchManagers": ["gradle", "maven"],
            "matchDepPatterns": [
                "^org.apache.beam.*$",
                "^apache-beam$",
                "^beam_python..._sdk$",
            ],
        },
        {
            "groupName": "org.apache.hadoop",
            "matchManagers": ["gradle", "maven"],
            "matchDepPatterns": [
                "^org.apache.hadoop.*$",
            ],
        },
        {
            "groupName": "org.jetbrains.kotlin",
            "matchManagers": ["gradle", "maven"],
            "matchDepPatterns": [
                "^org.jetbrains.kotlin.*$",
            ],
        },
        {
            "groupName": "gcsfs",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^fsspec$",
                "^gcsfs$",
            ],
        },
        {
            "groupName": "grpcio",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^grpcio",
            ],
        },
        {
            "groupName": "kubernetes",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^kubernetes$",
                "^kubernetes-asyncio$",
            ],
        },
        {
            "groupName": "mkl",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^intel-openmp$",
                "^mkl$",
            ],
        },
        {
            "groupName": "opentelemetry-instrumentation monorepo",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^opentelemetry-distro$",
                "^opentelemetry-instrumentation-",
            ],
        },
        {
            "groupName": "pydantic",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^pydantic$",
                "^pydantic-core$",
            ],
        },
        {
            "groupName": "pytorch",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^torch$",
                "^torchaudio$",
                "^torchvision$",
            ],
        },
        {
            "groupName": "sanic",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^sanic$",
                "^sanic-testing$",
            ],
        },
        {
            "groupName": "tensorrt-cu12",
            "matchDatasources": ["pypi"],
            "matchDepPatterns": [
                "^tensorrt-cu12.*$",
            ],
        },
        {
            "groupName": "google",
            "matchDatasources": ["terraform"],
            "matchDepPatterns": [
                "^google.*$",
            ],
        },
        {
            "groupName": "elasticsearch",
            "matchDepPatterns": [
                "^docker.elastic.co/kibana/kibana",
                "^elasticsearch",
                "^org.elasticsearch.client",
            ],
        },
        {
            "groupName": "python",
            "matchDepPatterns": [
                "^cimg/python$",
                "^python$",
                "^python/cpython$",
            ],
        },
        {
            "groupName": "terraform",
            "matchDepPatterns": [
                "^hashicorp/terraform$",
                "^terraform$",
            ],
        },
    ],
}
