// TODO: consider adding `minimumReleaseAge` to some or all of these,
// especially packages with frequent patches
{
    "automerge": false,
    "automergeType": "pr",
    "ignoreTests": false,
    "ignoreUnstable": true,
    "lockFileMaintenance": {
        "automerge": true
    },
    // TODO: check out the new `isBreaking` flag for simplifying this, or
    // consider using `"matchCurrentVersion": "!/^0/"`
    "packageRules": [
        {
            "matchUpdateTypes": ["patch", "pin", "digest"],
            "automerge": true,
        },
        {
            "matchDatasources": ["crate"],
            "matchDepNames": [
                "chrono",
                "log",
                "serde",
                "serde_json",
                "xdg",
            ],
            "matchUpdateTypes": ["minor"],
            "automerge": true,
        },
        {
            "matchDatasources": ["docker"],
            "matchPackagePatterns": [
                "^google/cloud-sdk$",
                "^thekevjames/gcloud-pubsub-emulator$",
                "^quay.io/thekevjames/gcloud-pubsub-emulator$",
            ],
            "matchUpdateTypes": ["major", "minor"],
            "automerge": true,
        },
        {
            "matchDatasources": ["docker"],
            "matchPackagePatterns": [
                "^thekevjames/",
                "^quay.io/thekevjames/",
            ],
            "matchUpdateTypes": ["minor"],
            "automerge": true,
        },
        {
            "matchDatasources": ["docker"],
            "matchDepNames": [
                "alpine/git",
                "bitnami/kube-state-metrics",
                "busybox",
                "caddy",
                "cimg/gcp",
                "curlimages/curl",
                "docker",
                "docker.n8n.io/n8nio/n8n",
                "docker/dockerfile",
                "ghcr.io/gethomepage/homepage",
                "hashicorp/terraform",
                "moss/xelatex",
                "node",
                "nodejs/node",
                "pandoc/core",
                "surnet/alpine-wkhtmltopdf",
                "quay.io/linuxserver.io/jellyfin",
                "quay.io/linuxserver.io/prowlarr",
                "quay.io/linuxserver.io/radarr",
                "quay.io/linuxserver.io/sonarr",
                "quay.io/linuxserver.io/syncthing",
                "quay.io/prometheus/prometheus",
            ],
            "matchUpdateTypes": ["minor"],
            "automerge": true,
        },
        {
            "matchDatasources": ["docker"],
            "matchDepNames": [
                "docker.io/cloudflare/cloudflared",
            ],
            "automerge": false,
        },
        {
            "matchDepTypes": ["action"],
            "matchUpdateTypes": ["minor"],
            "pinDigests": true,
            "automerge": true,
        },
        {
            "matchDatasources": ["pypi"],
            "matchPackagePatterns": [
                "^coveralls$",
                "^gcloud-aio",
                "^gcloud-rest",
            ],
            "matchUpdateTypes": ["minor"],
            "automerge": true,
        },
        {
            "matchDatasources": ["pypi"],
            "matchDepNames": [
                "aiohttp",
                "fava",
                "flake8-2020",
                "flake8-broken-line",
                "flake8-builtins",
                "flake8-comprehensions",
                "google-api-python-client",
                "google-auth",
                "google-cloud-aiplatform",
                "google-cloud-bigquery",
                "google-cloud-pubsub",
                "google-cloud-speech",
                "google-cloud-storage",
                "hiredis",
                "jinja2",
                "jira",
                "jsonpath-ng",
                "hypothesis",
                "openai",
                "pip",
                "prometheus-fastapi-instrumentator",
                "poetry",
                "pydantic",
                "pydantic-settings",
                "pygments",
                "pyjson5",
                "pytest",
                "pytest-asyncio",
                "pytest-cases",
                "pytest-cov",
                "pytest-datadir",
                "pytest-mock",
                "redis",
                "requests",
                "sh",
                "sphinx",
                "sqlalchemy",
                "tqdm",
                "transformers",
            ],
            "matchUpdateTypes": ["minor"],
            "automerge": true,
        },
        {
            "matchDatasources": ["terraform-module", "terraform-provider"],
            "matchDepNames": [
                "cloudflare",
                "confluent",
                "confluentinc/confluent",
                "github",
                "google",
                "grafana",
                "hashicorp/cloudflare",
                "hashicorp/google",
                "hashicorp/grafana",
                "hashicorp/kubernetes",
                "integrations/github",
                "kubernetes",
            ],
            "matchUpdateTypes": ["minor"],
            "automerge": true,
        },
        {
            "matchManagers": ["pre-commit"],
            "matchDatasources": ["github-releases", "github-tags", "pypi"],
            "matchUpdateTypes": ["minor"],
            "automerge": true,
        }
      ]
}
